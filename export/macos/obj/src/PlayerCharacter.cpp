// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_PlayerCharacter
#include <PlayerCharacter.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8c76c5e1ca9da177_7_new,"PlayerCharacter","new",0x079998da,"PlayerCharacter.new","PlayerCharacter.hx",7,0xb0d2bfd6)

void PlayerCharacter_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_8c76c5e1ca9da177_7_new)
HXLINE(   8)		this->makeGraphic(50,50,-1,null(),null());
HXLINE(   9)		this->set_x(( (Float)(0) ));
HXLINE(  10)		this->set_y(( (Float)(700) ));
HXLINE(  11)		super::__construct(null(),null(),null());
            	}

Dynamic PlayerCharacter_obj::__CreateEmpty() { return new PlayerCharacter_obj; }

void *PlayerCharacter_obj::_hx_vtable = 0;

Dynamic PlayerCharacter_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PlayerCharacter_obj > _hx_result = new PlayerCharacter_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PlayerCharacter_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x59e0c928) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x59e0c928;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}


::hx::ObjectPtr< PlayerCharacter_obj > PlayerCharacter_obj::__new() {
	::hx::ObjectPtr< PlayerCharacter_obj > __this = new PlayerCharacter_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PlayerCharacter_obj > PlayerCharacter_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PlayerCharacter_obj *__this = (PlayerCharacter_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PlayerCharacter_obj), true, "PlayerCharacter"));
	*(void **)__this = PlayerCharacter_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PlayerCharacter_obj::PlayerCharacter_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PlayerCharacter_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *PlayerCharacter_obj_sStaticStorageInfo = 0;
#endif

::hx::Class PlayerCharacter_obj::__mClass;

void PlayerCharacter_obj::__register()
{
	PlayerCharacter_obj _hx_dummy;
	PlayerCharacter_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("PlayerCharacter",e8,e3,b9,8d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< PlayerCharacter_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PlayerCharacter_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PlayerCharacter_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

